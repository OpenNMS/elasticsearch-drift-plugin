version: 2.1

executors:
  build-executor:
    docker:
      - image: circleci/openjdk:8u212-jdk-stretch
        environment:
          MAVEN_OPTS: -Xmx2g
  package-cloud-cli-executor:
    docker:
      - image: opennms/package-cloud-cli:0.3.05-b1
  python-executor:
    docker:
      - image: circleci/python:3.7.2
  github-executor:
    docker:
      - image: cibuilds/github:0.12

jobs:
  build:
    executor: build-executor
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: Download Maven plugins and dependencies
          command: mvn dependency:resolve-plugins dependency:go-offline

      - run:
          name: Install packaging dependencies
          command: sudo apt-get update; sudo apt-get install rpm build-essential

      - run:
          name: Build and run the tests
          command: |
            mvn clean test integration-test

      - save_cache:
          paths:
            - ~/.m2
          key: v2-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Gather test results
          when: always # test results must be copied even on failure
          command: |
            mkdir -p target/test-results
            for d in es-*/target/surefire-reports; do cp -r "$d" "target/test-results/${d/\/target\//-}"; done

      - store_test_results:
          path: target/test-results

      - run:
          name: Gather artifacts
          command: |
            mkdir -p target/artifacts
            find . -type f -regex '\./es-.*/target/rpm/elasticsearch-drift-plugin/RPMS/noarch/.*\.rpm' -exec cp {} target/artifacts/ \;
            find . -type f -regex '\./es-.*/target/releases/.*\.zip' -exec cp {} target/artifacts/ \;
            find . -type f -regex '\./es-.*/target/releases/.*\.deb' -exec cp {} target/artifacts/ \;

      - store_artifacts:
          path: target/artifacts

      - persist_to_workspace:
          root: ~/
          paths:
            - project

  deploy-maven:
    executor: build-executor
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/

      # Download cached dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: Prepare GPG keystore file
          command: |
            export GPG_KEY_FILE=`mktemp`
            echo "export GPG_KEY=$GPG_KEY_FILE" >> $BASH_ENV

      - run:
          name: Base64 decode GPG keystore to file
          command: echo $SIGNING_PGP_BASE64 | base64 --decode > $GPG_KEY

      - run:
          name: Import GPG keys
          command: gpg --batch --import $GPG_KEY

      - run:
          name: Deploy the artifacts
          command: |
            mvn -s .circleci.settings.xml -Pgpg -DskipTests package deploy

  deploy-package-snapshots:
    executor: package-cloud-cli-executor
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Push RPM/Deb packages
          command: |
            source .circleci/env/package_cloud_snapshots
            package_cloud push ${PACKAGECLOUD_USER}/${PACKAGECLOUD_REPO}/${PACKAGECLOUD_RPM_DISTRO_VERSION} target/artifacts/*rpm
            package_cloud push ${PACKAGECLOUD_USER}/${PACKAGECLOUD_REPO}/${PACKAGECLOUD_DEB_DISTRO_VERSION} target/artifacts/*.deb

  deploy-package-release:
    executor: package-cloud-cli-executor
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Push RPM/Deb packages
          command: |
            source .circleci/env/package_cloud_release
            package_cloud push ${PACKAGECLOUD_USER}/${PACKAGECLOUD_REPO}/${PACKAGECLOUD_RPM_DISTRO_VERSION} target/artifacts/*rpm
            package_cloud push ${PACKAGECLOUD_USER}/${PACKAGECLOUD_REPO}/${PACKAGECLOUD_DEB_DISTRO_VERSION} target/artifacts/*.deb

  publish-github-release:
    executor: github-executor
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Publish release on GitHub
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./target/artifacts/

  yank-package-snapshots:
    executor: python-executor
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Yank SNAPSHOT packages
          command: |
            source .circleci/env/package_cloud_snapshots
            .circleci/scripts/packagecloud-yank-snapshot-packages.py

workflows:
  build-deploy:
    jobs:
      # Run build jobs for all branches and any tag
      - build:
          filters:
            tags:
              only: /.*/
      - deploy-package-snapshots:
          requires:
            - build
          filters:
            branches:
              only:
               - /^es.*/
      - yank-package-snapshots:
          requires:
            - deploy-package-snapshots
      - deploy-package-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - deploy-maven:
          requires:
            - build
          filters:
            branches:
              only:
               - /^es.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/

