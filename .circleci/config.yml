version: 2.1

executors:
  build-executor:
    docker:
      - image: cimg/openjdk:17.0.14
        environment:
          MAVEN_OPTS: -Xmx2g
  package-cloud-cli-executor:
    docker:
      - image: opennms/package-cloud-cli:0.3.05-b1
  python-executor:
    docker:
      - image: cimg/python:3.9
  github-executor:
    docker:
      - image: cibuilds/github:0.13

jobs:
  build:
    executor: build-executor
    steps:
      - checkout

      - sign-packages/install-deb-dependencies:
          skip_if_forked_pr: true
          use_sudo: true
      - sign-packages/setup-env:
          skip_if_forked_pr: true

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: Download Maven plugins and dependencies
          command: mvn dependency:resolve-plugins dependency:go-offline

      - run:
          name: Install packaging dependencies
          command: |
            sudo apt-get update; sudo apt-get install rpm ruby ruby-dev rubygems build-essential
            sudo gem install --no-document fpm

      - run:
          name: Build and run the tests
          command: |
            U=${CIRCLE_TAG#v*}; V=${U%%_*}; mvn clean test integration-test ${V:+-Drevision=$V -DpackageRevision=1 --projects ${CIRCLE_TAG#*_}}

      - save_cache:
          paths:
            - ~/.m2
          key: v2-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Gather test results
          when: always # test results must be copied even on failure
          command: |
            mkdir -p target/test-results
            for d in es-*/target/surefire-reports; do cp -r "$d" "target/test-results/${d/\/target\//-}"; done

      - store_test_results:
          path: target/test-results

      - run:
          name: Gather artifacts
          command: |
            mkdir -p target/artifacts
            find . -type f -regex '\./es-.*/target/releases/.*\.\(deb\|rpm\|zip\)' -exec cp {} target/artifacts/ \;

      - store_artifacts:
          path: target/artifacts

      - persist_to_workspace:
          root: ~/
          paths:
            - project

  deploy-maven:
    executor: build-executor
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/

      - sign-packages/install-deb-dependencies:
          skip_if_forked_pr: true
          use_sudo: true
      - sign-packages/setup-env:
          skip_if_forked_pr: true

      # Download cached dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: Deploy the artifacts
          # deploy-maven is called only if CIRCLE_TAG is set
          command: |
            mkdir -p ~/.m2
            echo "${GPG_SECRET_KEY}" | base64 -d > ~/.m2/sign-key.asc
            export SIGN_KEY_PASS="$(echo "${GPG_PASSPHRASE}" | base64 -d)"
            V=${CIRCLE_TAG%%_*}; mvn -s .circleci.settings.xml -Pgpg -DskipTests -Drevision=${V:1} package deploy --projects ${CIRCLE_TAG#*_}

  deploy-packages:
    executor: cloudsmith/default
    resource_class: small
    steps:
      - attach_workspace:
          at: ~/

      - cloudsmith/ensure-api-key
      - cloudsmith/install-cli

      - run:
          name: Push packages to CloudSmith
          command: .circleci/scripts/publish-cloudsmith.sh

  publish-github-release:
    executor: build-executor
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Install GitHub CLI and Publish release on GitHub
          command: |
            if [ -z "${CIRCLE_TAG}" ]; then 
              echo "Skipping step as we don't have a tag!"
            else 
              tag=${CIRCLE_TAG}

              # Install GitHub CLI
              type -p curl >/dev/null || sudo apt install curl -y
              curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
              && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
              && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
              && sudo apt update \
              && sudo apt install gh -y
              
              gh release create "$tag" \
                --repo "${CIRCLE_PROJECT_REPONAME}" \
                --title "$tag" \
                --notes "$tag" \
                ./target/artifacts/*
            fi

orbs:
  cloudsmith: cloudsmith/cloudsmith@1.0.3
  sign-packages: opennms/sign-packages@2.3.0

workflows:
  version: 2
  build-deploy:
    jobs:
      # Run build jobs for all branches and any tag
      - build:
          context:
            - "CircleCI"
            - "github-api"
            - "gpg-signing"
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      # deploy package snapshots for non-master branches only
      - deploy-packages:
          context:
            - "cloudsmith-publish-account"
          requires:
            - build
          filters:
            tags:
              ignore: /.*/
            branches:
              only: master
      - deploy-maven:
          context: 
            - "OSSRH Principal"
            - "gpg-signing"
          requires:
            - build
          filters:
            tags:
              only: /^v[\d\.]+_.*/
            branches:
              ignore: /.*/
      - publish-github-release:
          context: 
            - "github-api"
          requires:
            - build
          filters:
            tags:
              only: /^v[\d\.]+_.*/
            branches:
              ignore: /.*/
